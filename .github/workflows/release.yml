name: Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type (patch, minor, major, rc)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - rc

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build packages
        run: |
          pnpm --filter @mcp3/common build
          pnpm --filter "!@mcp3/common" build

      - name: Run tests
        run: pnpm test

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine release type
        id: release-type
        run: |
          # Default to rc for push events, use input for manual workflow
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "RELEASE_TYPE=rc" >> $GITHUB_ENV
          else
            echo "RELEASE_TYPE=${{ github.event.inputs.releaseType }}" >> $GITHUB_ENV
          fi
          echo "Using release type: $RELEASE_TYPE"

      - name: Bump versions of changed packages
        id: version-bump
        run: |
          # Run the version bump script with determined release type
          if [ -z "$RELEASE_TYPE" ]; then
            RELEASE_TYPE="rc"
          fi
          node ./bump-versions.js --type=$RELEASE_TYPE

      - name: Commit version changes
        if: ${{ env.RELEASE_TYPE != 'rc' }}
        run: |
          git add .
          git commit -m "chore: bump versions [skip ci]"
          git push

      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [[ "$RELEASE_TYPE" == "rc" ]]; then
            pnpm publish -r --no-git-checks --access public --tag next
          else
            pnpm publish -r --no-git-checks --access public
          fi

      - name: Create release tags
        if: ${{ env.RELEASE_TYPE != 'rc' }}
        run: |
          # Make the script executable
          chmod +x ./create-release-tags.js
          # Create Git tags for each released package
          node ./create-release-tags.js